import os, pygame, mathfrom pygame.locals import *from pygame import fontdef loadImage( nome ):    ''' Carregar Imagens '''    nome = os.path.join('images', nome)    imagem = pygame.image.load( nome ).convert_alpha()    return imagem, imagem.get_rect()def loadSom( nome ):    ''' Carregar Sons '''    nome = os.path.join('audio', nome)    som = pygame.mixer.Sound( nome )        return somdef colidiu(obj , objPx, objPy, obj2, obj2Px, obj2Py):    return obj.get_rect( center= (objPx + obj.get_size()[0]/2, objPy +obj.get_size()[1]/2) ).colliderect( obj2.get_rect(center= (obj2Px + obj2.get_size()[0]/2, obj2Py +obj2.get_size()[1]/2)) )def colidiu_blocoIn( obj, objPx, objPy  ):    global blocos_madeira    for x in (158,358,558,158,358):  #blocos indestrutiveis              for y in (154,354):            if obj.get_rect(center= (objPx + obj.get_size()[0]/2, objPy +obj.get_size()[1]/2) ).colliderect(blocoIn.get_rect(center=(x+43, y+44))):                return True    return Falsedef colidiu_Madeira( obj, objPx, objPy ):    for bloco in blocos_madeira:        if obj.get_rect(center= (objPx + obj.get_size()[0]/2, objPy +obj.get_size()[1]/2) ).colliderect(blocoM.get_rect(center=(bloco[0]+50, bloco[1]+50))):                if cont_explosao_desaparecer == 0 and obj == explosao_vertical or obj == explosao_horizontal:                    blocos_madeira.remove( bloco )                return True    return False            #inicializarpygame.init()pygame.mixer.init()size = width, height = 800, 600tela = pygame.display.set_mode(size)cor = 114, 115, 118fonte = font.SysFont("ARIAL", 50, True, False)clock = pygame.time.Clock()pygame.display.set_caption('Projeto FINAL de P1/LP1: Bomberman')#carregar textos/imagensHP = fonte.render("HP", 0, (255, 255, 255))bomberman = person, personP = loadImage('p.png')coelho, coelhoP = loadImage('dude2.png')coelho2, coelhoP = loadImage('dude.png')rato, ratoP = loadImage('ini.png')vida, vidaP = loadImage('vida.png')bomba, bombaP = loadImage('bomba.png')explosao_vertical , explosaoP_vertical = loadImage('ex_bombaV.png')explosao_horizontal , explosaoP_horizontal = loadImage('ex_bombaH2.png')piso = grama, gramaP = loadImage('grama.png')blocoIn, blocoInP = loadImage('blocoindestrutivel.png')blocoM, blocoMP = loadImage('blocomadeira.png')#carregar sonssom_clicar = loadSom('clicar.wav')som_explosao = loadSom('explode.wav')#carregar tamanhosperson_size = person.get_size()coelho_size = coelho.get_size()#Inicializar posiçõesperson_safe = personPx, personPy = personP = 50, 50pos_bomba = 50,50explosao_v_Px, explosao_v_Py = personPx - 0, personPy - 80explosao_H_Px, explosao_H_Py = personPx -90, personPy +5    #inimigoscoelhoPx_1, coelhoPy_1 = 270, 270coelhoPx_2, coelhoPy_2 = 360, 65coelhoPx_3, coelhoPy_3 = 560, 270coelhoPx_4, coelhoPy_4 = 465, 475ratoPx_1, ratoPy_1     = 665, 85ratoPx_2, ratoPy_2     = 165, 485inimigos = [ (coelho2, coelhoPx_1, coelhoPy_1) , (coelho, coelhoPx_2, coelhoPy_2), (coelho2, coelhoPx_3, coelhoPy_3), (coelho, coelhoPx_4, coelhoPy_4), (rato,ratoPx_1, ratoPy_1), (rato,ratoPx_2, ratoPy_2)]    #blocos madeirablocos_madeira = [ (250, 50),(450, 50),(550, 50),(250, 150),(650, 150),(50, 250),(650, 250),(450, 350),(250, 450),(350, 450),(550, 450),(650, 450) ]#carregar funcionalidadescontinuar = Truel_blocos_madeira = []qnt_vida = 3teclas = [False, False, False, False] #w/a/s/dativar_bomba = False#contadores de tempocont_bomba_explosao_vertical = 0cont_bomba_explosao_horizontal = 0cont_explosao_desaparecer = 0#jogowhile continuar:            clock.tick(60)    tela.fill(cor)    colisao_blocoIn = False        #desenhar cenario    for x in range( 7 ):        for y in range( 5 ):            tela.blit(grama, (x*100+50, y*100+50))                #desenhar elementos na tela    #bomba    if ativar_bomba:        tela.blit( bomba, pos_bomba )            if cont_bomba_explosao_vertical == 80 and cont_bomba_explosao_horizontal == 80:                         ativar_bomba = False        explosao_v_Px, explosao_v_Py = pos_bomba[0]     , pos_bomba[1] -105        explosao_H_Px, explosao_H_Py = pos_bomba[0] -105, pos_bomba[1]                tela.blit( explosao_vertical, (explosao_v_Px, explosao_v_Py) )        tela.blit( explosao_horizontal, (explosao_H_Px, explosao_H_Py) )        if cont_explosao_desaparecer == 0:            som_explosao.play(0)                cont_explosao_desaparecer += 1        if cont_explosao_desaparecer == 65:                        cont_bomba_explosao_vertical = 0            cont_explosao_desaparecer = 0    #inimigos    for inimigo in inimigos:        tela.blit( inimigo[0], (inimigo[1], inimigo[2]) )        #personagem    tela.blit(person, (personPx, personPy))        #HP        tela.blit(HP, (50, -2))    for x in range( qnt_vida ):        tela.blit(vida, (125+x*50, 10))    for x in (150,350,550,150,350):  #blocos indestrutiveis              for y in (150,350):            tela.blit(blocoIn,(x, y))    #BlocosMadeira    for bloco in blocos_madeira:        tela.blit( blocoM, bloco )                        #eventos    if ativar_bomba == True:         cont_bomba_explosao_vertical += 1        cont_bomba_explosao_horizontal += 1            for evento in pygame.event.get():                if evento.type == pygame.KEYDOWN:            #andar            if evento.key == K_w:                teclas[0] = True            elif evento.key == K_s:                teclas[2] = True            if evento.key == K_a:                teclas[1] = True            elif evento.key == K_d:                teclas[3] = True            #bomba            if evento.key == K_SPACE and not ativar_bomba :                ativar_bomba = True                pos_bomba = personPx + 10, personPy + 10                                cont_bomba_explosao_vertical = 0                cont_bomba_explosao_horizontal = 0                som_clicar.play(loops=0)                        if evento.type == pygame.KEYUP:#parar_andar            if evento.key == pygame.K_w:                teclas[0] = False                            elif evento.key == pygame.K_s:                teclas[2] = False            if evento.key == pygame.K_a:                teclas[1] = False            elif evento.key == pygame.K_d:                teclas[3] = False                        if evento.type == pygame.QUIT:#sair            pygame.quit()            exit()                #colisão    for inimigo in inimigos:#colisao_inimigos        if colidiu(explosao_vertical , explosao_v_Px, explosao_v_Py, *inimigo ) or colidiu(explosao_horizontal , explosao_H_Px, explosao_H_Py, *inimigo):            inimigos.remove( inimigo )        if colidiu(person , personPx, personPy, *inimigo ):            qnt_vida -= 1            personPx, personPy = person_safe            #detruir blocos      colidiu_Madeira( explosao_vertical, explosao_v_Px, explosao_v_Py ) or colidiu_Madeira( explosao_horizontal, explosao_H_Px, explosao_H_Py )                          #Mover Bomberman    if teclas[0] and personPy > 50:        personPy -= 4        if colidiu_blocoIn( person , personPx, personPy) or colidiu_Madeira( person , personPx, personPy):            personPy += 4            if teclas[1] and personPx > 50:        personPx -= 4        if colidiu_blocoIn( person , personPx, personPy) or colidiu_Madeira( person , personPx, personPy):            personPx += 4    if teclas[2] and personPy + person_size[1] < 550:        personPy += 4        if colidiu_blocoIn( person , personPx, personPy) or colidiu_Madeira( person , personPx, personPy):            personPy -= 4    if teclas[3] and personPx + person_size[0] < 750:        personPx += 4        if colidiu_blocoIn( person , personPx, personPy) or colidiu_Madeira( person , personPx, personPy):            personPx -= 4    pygame.display.flip()#atualiza